select * from [ Retail Sales Analysis]
where transactions_id is null 
OR
sale_date is NULL or 
sale_time is null or gender is null 
or category is null or quantiy is null 
or cogs is null or total_sale is null

--- 
Delete from [ Retail Sales Analysis]
where quantiy is null or price_per_unit is null or cogs is null or total_sale is null 

--- Data Exploration

--- How many sales we have

select COUNT(*) as total_sale from [ Retail Sales Analysis]

-- How many unique customers we have

select count(Distinct(customer_id)) as customer_count from [ Retail Sales Analysis]

-- How many unique category we have

select count(distinct(category)) as category_new from [ Retail Sales Analysis]


-- Data Analysis & Business Key Problems and answers

-- 0.1 Write a SQL query to retrieve all columns for sales made on '2022-11-05:
select * from [ Retail Sales Analysis]
where sale_date = '2022-11-05'

-- 0.2 Write a SQL query to retrieve all transactions where the category is 'Clothing' and the quantity sold is more than 4 in the month of Nov-2022:
SELECT *
FROM [ Retail Sales Analysis]
WHERE category = 'Clothing' 
AND FORMAT(sale_date, 'yyyy-MM') = '2022-11'  and quantiy >=4

-- 0.3 Write a SQL query to calculate the total sales (total_sale) for each category.:
select category,sum(total_sale) as total_sale from [ Retail Sales Analysis]
group by category

-- 0.4 Write a SQL query to find the average age of customers who purchased items from the 'Beauty' category.:

SELECT ROUND(AVG(age), 2) as avg_age
FROM [ Retail Sales Analysis]
WHERE category = 'Beauty'

-- 0.5 Write a SQL query to find all transactions where the total_sale is greater than 1500.:
select * from [ Retail Sales Analysis]
where total_sale > 1500

-- 0.6 Write a SQL query to find the total number of transactions (transaction_id) made by each gender in each category.:

select category,gender,count(*) as total_trans from [ Retail Sales Analysis]
group by category,gender
order by category 

-- 0.7 Write a SQL query to calculate the average sale for each month. Find out best selling month in each year:
select * from 
(
    select round(AVG(total_sale),4) as avg_sale,MONTH(sale_date)as month,year(sale_date)as year,
    DATENAME(MONTH,sale_date) as month_name, rank() over(partition by year(sale_date) order by AVG(total_sale) DESC)
    as rank
    from [ Retail Sales Analysis]
    group by YEAR(sale_date), MONTH(sale_date),DATENAME(MONTH, sale_date)
) as t1
where rank =1 

-- 0.8 Write a SQL query to find the top 5 customers based on the highest total sales **:
select top (5) customer_id,SUM(total_sale) as total_sale1 from [ Retail Sales Analysis]
GROUP by customer_id
order by total_sale1 desc;

-- 0.9 Write a SQL query to find the number of unique customers who purchased items from each category.:
select  category,count(distinct(customer_id)) as total_unique_customers from [ Retail Sales Analysis]
group by category

-- 0.10 Write a SQL query to create each shift and number of orders (Example Morning <12, Afternoon Between 12 & 17, Evening >17):

with hourly_sale as 
(


    SELECT 
        transactions_id,
        DATEPART(HOUR, sale_time) as hour_number,
        CASE 
            WHEN DATEPART(HOUR, sale_time) < 12 THEN 'Morning'
            WHEN DATEPART(HOUR, sale_time) BETWEEN 12 AND 17 THEN 'Afternoon'
            WHEN DATEPART(HOUR, sale_time) > 17 THEN 'Evening'
        END as shift
    FROM [ Retail Sales Analysis]
)
select shift,count(transactions_id) as total_orders from hourly_sale
group by shift 


 

